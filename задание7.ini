import numpy as np

# Функция для вычисления z = x^2 + y^2
def forward(x, y):
    return x**2 + y**2

# Функция для обратного распространения
def backward(x, y):
    dz_dx = 2 * x  # производная по x
    dz_dy = 2 * y  # производная по y
    return dz_dx, dz_dy

# Пример использования
x = 3.0
y = 4.0
z = forward(x, y)
dz_dx, dz_dy = backward(x, y)

print(f"z = {z}")
print(f"dz/dx = {dz_dx}, dz/dy = {dz_dy}")
pip install graphviz
from graphviz import Digraph

def create_graph():
    dot = Digraph()

    # Входные узлы
    dot.node('X', 'x')
    dot.node('Y', 'y')

    # Узел функции
    dot.node('Z', 'z = x^2 + y^2')

    # Узлы производных
    dot.node('dZ/dX', 'dz/dx = 2x')
    dot.node('dZ/dY', 'dz/dy = 2y')

    # Связи
    dot.edges(['XZ', 'YZ'])  # x и y ведут к z
    dot.edge('Z', 'dZ/dX')   # z ведет к производной по x
    dot.edge('Z', 'dZ/dY')   # z ведет к производной по y

    return dot

# Создаем и отображаем граф
graph = create_graph()
graph.render('graph', format='png', cleanup=True)  # Сохраняем граф в файл
graph.view()
